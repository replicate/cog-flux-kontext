name: Push models

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      ignore_schema_checks:
        description: 'Ignore schema compatibility checks'
        type: boolean
        default: false
      cog_version:
        description: 'Cog version to use (eg latest, v0.14.11)'
        type: string
        default: 'latest'

jobs:
  cog-safe-push:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest-4-cores

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install Cog
      run: |
        if [ "${{ inputs.cog_version }}" = "latest" ]; then
          sudo curl -o /usr/local/bin/cog -L "https://github.com/replicate/cog/releases/latest/download/cog_$(uname -s)_$(uname -m)"
        else
          sudo curl -o /usr/local/bin/cog -L "https://github.com/replicate/cog/releases/download/${{ inputs.cog_version }}/cog_$(uname -s)_$(uname -m)"
        fi
        sudo chmod +x /usr/local/bin/cog

    - name: cog login
      run: |
        echo ${{ secrets.COG_TOKEN }} | cog login --token-stdin

    - name: Install cog-safe-push
      run: |
        pip install git+https://github.com/replicate/cog-safe-push.git

    - name: Push selected models
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
      run: |
        model="kontext-dev"

        echo "==="
        echo "==="
        echo "=== Pushing $model"
        echo "==="
        echo "==="
        cog-safe-push --config cog-safe-push-configs/$model.yaml -vv ${{ inputs.ignore_schema_checks && '--ignore-schema-compatibility' || '' }}
        echo "==="
        echo "==="
        echo "=== Pushing underlying official model $model"
        echo "==="
        echo "==="
        cog-safe-push --push-official-model --config cog-safe-push-configs/$model.yaml -vv ${{ inputs.ignore_schema_checks && '--ignore-schema-compatibility' || '' }}

  # unit-test:
  #   runs-on: ubuntu-latest
  #   if: github.event_name != 'workflow_dispatch'

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.11'

  #   - name: Install dependencies
  #     run: |
  #       pip install -r requirements-test.txt
  #       pip install -r requirements.txt

  #   - name: Run pytest
  #     run: |
  #       ./script/unit-test

  lint:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements-test.txt
        pip install -r requirements.txt
    - name: Lint
      run: |
        ./script/lint
